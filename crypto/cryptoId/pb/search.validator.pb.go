// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: search.proto

package search

import (
	fmt "fmt"
	_ "github.com/creationtime/lib-go/openapiv2"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/micro/go-micro/v2/api/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *MatchReq) Validate() error {
	return nil
}
func (this *MatchRsp) Validate() error {
	for _, item := range this.Labels {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Labels", err)
			}
		}
	}
	for _, item := range this.Users {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Users", err)
			}
		}
	}
	for _, item := range this.Posts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Posts", err)
			}
		}
	}
	return nil
}
func (this *Label) Validate() error {
	return nil
}
func (this *User) Validate() error {
	return nil
}
func (this *Post) Validate() error {
	for _, item := range this.LabelList {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("LabelList", err)
			}
		}
	}
	return nil
}
